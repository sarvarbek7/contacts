services:
  nginx:
    image: nginx:1.27-alpine
    restart: always
    ports:
      - ${PORT}:80
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    expose:
      - 8080
    restart: always
    environment:
      - HRM_PRO__Phone=${HRM_PRO_PHONE}
      - HRM_PRO__Password=${HRM_PRO_PASSWORD}
      - ConnectionStrings__Default=Host=db;Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:17-alpine
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  db-init:
    image: postgres:17-alpine
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./scripts/db.sql:/init.sql
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    command: >
      /bin/sh -c " psql -h db -U ${DB_USER} -d ${DB_NAME} -f /init.sql "

volumes:
  db-data: