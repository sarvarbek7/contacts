CREATE TABLE IF NOT EXISTS ef_migrations (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk_ef_migrations PRIMARY KEY (migration_id)
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE TABLE account (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        login character varying(255) NOT NULL,
        password character varying(100) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        created_by_id integer,
        updated_at timestamp with time zone,
        updated_by_id integer,
        deleted_at timestamp with time zone,
        deleted_by_id integer,
        is_deleted boolean NOT NULL,
        CONSTRAINT pk_account PRIMARY KEY (id),
        CONSTRAINT fk_account_account_created_by_id FOREIGN KEY (created_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_account_account_deleted_by_id FOREIGN KEY (deleted_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_account_account_updated_by_id FOREIGN KEY (updated_by_id) REFERENCES account (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE TABLE "user" (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        external_id integer NOT NULL,
        first_name character varying(64) NOT NULL,
        last_name character varying(64) NOT NULL,
        middle_name character varying(64),
        photo text,
        account_id integer,
        CONSTRAINT pk_user PRIMARY KEY (id),
        CONSTRAINT fk_user_account_account_id FOREIGN KEY (account_id) REFERENCES account (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE TABLE phone_number (
        id uuid NOT NULL,
        number text NOT NULL,
        active_assigned_user_id integer,
        created_at timestamp with time zone NOT NULL,
        created_by_id integer,
        updated_at timestamp with time zone,
        updated_by_id integer,
        deleted_at timestamp with time zone,
        deleted_by_id integer,
        is_deleted boolean NOT NULL,
        CONSTRAINT pk_phone_number PRIMARY KEY (id),
        CONSTRAINT fk_phone_number_account_created_by_id FOREIGN KEY (created_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_phone_number_account_deleted_by_id FOREIGN KEY (deleted_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_phone_number_account_updated_by_id FOREIGN KEY (updated_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_phone_number_user_active_assigned_user_id FOREIGN KEY (active_assigned_user_id) REFERENCES "user" (id) ON DELETE SET NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE TABLE user_phone_number (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        is_active boolean NOT NULL,
        phone_number_id uuid NOT NULL,
        user_id integer,
        created_at timestamp with time zone NOT NULL,
        created_by_id integer,
        CONSTRAINT pk_user_phone_number PRIMARY KEY (id),
        CONSTRAINT fk_user_phone_number_account_created_by_id FOREIGN KEY (created_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_user_phone_number_phone_number_phone_number_id FOREIGN KEY (phone_number_id) REFERENCES phone_number (id) ON DELETE CASCADE,
        CONSTRAINT fk_user_phone_number_user_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_account_created_by_id ON account (created_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_account_deleted_by_id ON account (deleted_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_account_updated_by_id ON account (updated_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_phone_number_active_assigned_user_id ON phone_number (active_assigned_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_phone_number_created_by_id ON phone_number (created_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_phone_number_deleted_by_id ON phone_number (deleted_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_phone_number_updated_by_id ON phone_number (updated_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE UNIQUE INDEX ix_user_account_id ON "user" (account_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE UNIQUE INDEX ix_user_external_id ON "user" (external_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_user_phone_number_created_by_id ON user_phone_number (created_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_user_phone_number_phone_number_id ON user_phone_number (phone_number_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    CREATE INDEX ix_user_phone_number_user_id ON user_phone_number (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250507101605_Initial') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250507101605_Initial', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250508053611_AddRemoveAccountUserHistory') THEN
    ALTER TABLE user_phone_number ADD removed_at timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250508053611_AddRemoveAccountUserHistory') THEN
    ALTER TABLE user_phone_number ADD removed_by_id integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250508053611_AddRemoveAccountUserHistory') THEN
    CREATE INDEX ix_user_phone_number_removed_by_id ON user_phone_number (removed_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250508053611_AddRemoveAccountUserHistory') THEN
    ALTER TABLE user_phone_number ADD CONSTRAINT fk_user_phone_number_account_removed_by_id FOREIGN KEY (removed_by_id) REFERENCES account (id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250508053611_AddRemoveAccountUserHistory') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250508053611_AddRemoveAccountUserHistory', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250510065012_AddRoleToAccount') THEN
    ALTER TABLE account ADD role integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250510065012_AddRoleToAccount') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250510065012_AddRoleToAccount', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    ALTER TABLE phone_number ADD active_assigned_position_id integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    UPDATE account SET role = 0 WHERE role IS NULL;
    ALTER TABLE account ALTER COLUMN role SET NOT NULL;
    ALTER TABLE account ALTER COLUMN role SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    CREATE TABLE position_phone_number (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        is_active boolean NOT NULL,
        phone_number_id uuid NOT NULL,
        position_id integer NOT NULL,
        organization text NOT NULL,
        department text NOT NULL,
        position text NOT NULL,
        created_at timestamp with time zone NOT NULL,
        created_by_id integer,
        removed_by_id integer,
        removed_at timestamp with time zone,
        CONSTRAINT pk_position_phone_number PRIMARY KEY (id),
        CONSTRAINT fk_position_phone_number_account_created_by_id FOREIGN KEY (created_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_position_phone_number_account_removed_by_id FOREIGN KEY (removed_by_id) REFERENCES account (id),
        CONSTRAINT fk_position_phone_number_phone_number_phone_number_id FOREIGN KEY (phone_number_id) REFERENCES phone_number (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    CREATE INDEX ix_position_phone_number_created_by_id ON position_phone_number (created_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    CREATE INDEX ix_position_phone_number_phone_number_id ON position_phone_number (phone_number_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    CREATE INDEX ix_position_phone_number_removed_by_id ON position_phone_number (removed_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250512060928_MakeRoleRequired') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250512060928_MakeRoleRequired', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250513075040_RemovePositionHistoryProps') THEN
    ALTER TABLE position_phone_number DROP COLUMN department;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250513075040_RemovePositionHistoryProps') THEN
    ALTER TABLE position_phone_number DROP COLUMN organization;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250513075040_RemovePositionHistoryProps') THEN
    ALTER TABLE position_phone_number DROP COLUMN position;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250513075040_RemovePositionHistoryProps') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250513075040_RemovePositionHistoryProps', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250514094504_AddPropsPositionPhoneNumber') THEN
    ALTER TABLE position_phone_number ADD department text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250514094504_AddPropsPositionPhoneNumber') THEN
    ALTER TABLE position_phone_number ADD organization text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250514094504_AddPropsPositionPhoneNumber') THEN
    ALTER TABLE position_phone_number ADD position text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250514094504_AddPropsPositionPhoneNumber') THEN
    ALTER TABLE phone_number ADD active_assigned_organization_id integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250514094504_AddPropsPositionPhoneNumber') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250514094504_AddPropsPositionPhoneNumber', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517102528_AddPhoneNumberPositionUser') THEN
    ALTER TABLE phone_number ADD active_assigned_position_user_id integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517102528_AddPhoneNumberPositionUser') THEN
    CREATE TABLE position_user_phone_number (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        phone_number_id uuid NOT NULL,
        user_id integer NOT NULL,
        created_at timestamp with time zone NOT NULL,
        created_by_id integer,
        CONSTRAINT pk_position_user_phone_number PRIMARY KEY (id),
        CONSTRAINT fk_position_user_phone_number_account_created_by_id FOREIGN KEY (created_by_id) REFERENCES account (id) ON DELETE SET NULL,
        CONSTRAINT fk_position_user_phone_number_phone_number_phone_number_id FOREIGN KEY (phone_number_id) REFERENCES phone_number (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517102528_AddPhoneNumberPositionUser') THEN
    CREATE INDEX ix_position_user_phone_number_created_by_id ON position_user_phone_number (created_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517102528_AddPhoneNumberPositionUser') THEN
    CREATE INDEX ix_position_user_phone_number_phone_number_id ON position_user_phone_number (phone_number_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517102528_AddPhoneNumberPositionUser') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250517102528_AddPhoneNumberPositionUser', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517122859_AddForeignKeyActiveAssignedUserId') THEN
    CREATE INDEX ix_phone_number_active_assigned_position_user_id ON phone_number (active_assigned_position_user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517122859_AddForeignKeyActiveAssignedUserId') THEN
    ALTER TABLE phone_number ADD CONSTRAINT fk_phone_number_user_active_assigned_position_user_id FOREIGN KEY (active_assigned_position_user_id) REFERENCES "user" (id) ON DELETE SET NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250517122859_AddForeignKeyActiveAssignedUserId') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250517122859_AddForeignKeyActiveAssignedUserId', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250518141823_AddPositionUserHistoryRemoveLog') THEN
    ALTER TABLE position_user_phone_number ADD removed_at timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250518141823_AddPositionUserHistoryRemoveLog') THEN
    ALTER TABLE position_user_phone_number ADD removed_by_id integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250518141823_AddPositionUserHistoryRemoveLog') THEN
    CREATE INDEX ix_position_user_phone_number_removed_by_id ON position_user_phone_number (removed_by_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250518141823_AddPositionUserHistoryRemoveLog') THEN
    ALTER TABLE position_user_phone_number ADD CONSTRAINT fk_position_user_phone_number_account_removed_by_id FOREIGN KEY (removed_by_id) REFERENCES account (id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250518141823_AddPositionUserHistoryRemoveLog') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250518141823_AddPositionUserHistoryRemoveLog', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250526095256_AddTypeToPhoneNumber') THEN
    ALTER TABLE phone_number ADD type integer NOT NULL DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250526095256_AddTypeToPhoneNumber') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250526095256_AddTypeToPhoneNumber', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250611105314_AddHandbooks') THEN
    CREATE TABLE handbook (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        CONSTRAINT pk_handbook PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250611105314_AddHandbooks') THEN
    CREATE TABLE handbook_item (
        phone_number_id uuid NOT NULL,
        handbook_id integer NOT NULL,
        alias text NOT NULL,
        CONSTRAINT pk_handbook_item PRIMARY KEY (handbook_id, phone_number_id),
        CONSTRAINT fk_handbook_item_handbook_handbook_id FOREIGN KEY (handbook_id) REFERENCES handbook (id) ON DELETE CASCADE,
        CONSTRAINT fk_handbook_item_phone_number_phone_number_id FOREIGN KEY (phone_number_id) REFERENCES phone_number (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250611105314_AddHandbooks') THEN
    CREATE INDEX ix_handbook_item_phone_number_id ON handbook_item (phone_number_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250611105314_AddHandbooks') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250611105314_AddHandbooks', '9.0.4');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    ALTER TABLE handbook_item DROP CONSTRAINT pk_handbook_item;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    ALTER TABLE handbook_item DROP COLUMN alias;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    ALTER TABLE handbook DROP COLUMN name;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    ALTER TABLE handbook_item ADD id integer GENERATED BY DEFAULT AS IDENTITY;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    ALTER TABLE handbook_item ADD CONSTRAINT pk_handbook_item PRIMARY KEY (id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    CREATE TABLE handbook_item_translation (
        language integer NOT NULL,
        handbook_item_id integer NOT NULL,
        alias text NOT NULL,
        is_default boolean NOT NULL,
        CONSTRAINT pk_handbook_item_translation PRIMARY KEY (handbook_item_id, language),
        CONSTRAINT fk_handbook_item_translation_handbook_item_handbook_item_id FOREIGN KEY (handbook_item_id) REFERENCES handbook_item (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    CREATE TABLE handbook_translation (
        language integer NOT NULL,
        handbook_id integer NOT NULL,
        name text NOT NULL,
        is_default boolean NOT NULL,
        CONSTRAINT pk_handbook_translation PRIMARY KEY (handbook_id, language),
        CONSTRAINT fk_handbook_translation_handbook_handbook_id FOREIGN KEY (handbook_id) REFERENCES handbook (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    CREATE INDEX ix_handbook_item_handbook_id ON handbook_item (handbook_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM ef_migrations WHERE "migration_id" = '20250612100000_AddTranslations') THEN
    INSERT INTO ef_migrations (migration_id, product_version)
    VALUES ('20250612100000_AddTranslations', '9.0.4');
    END IF;
END $EF$;
COMMIT;

